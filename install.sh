#!/usr/bin/env/bash
set -eo pipefail  # –£–±–∏—Ä–∞–µ–º -u, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è –Ω–∞ unbound variables

echo "=== üöÄ –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ Gitea + S3 (s3fs) ==="

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞
if grep -qi "debian" /etc/os-release; then
  DISTRO="debian"
  CODENAME=$(grep -oP '(?<=VERSION_CODENAME=).+' /etc/os-release)
elif grep -qi "ubuntu" /etc/os-release; then
  DISTRO="ubuntu"
  CODENAME=$(grep -oP '(?<=VERSION_CODENAME=).+' /etc/os-release)
else
  echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ Debian –∏ Ubuntu."
  exit 1
fi
echo "> üñ•Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: ${DISTRO} (${CODENAME})"

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ .env –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if [ ! -f .env ]; then
  echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏."
  exit 1
fi
source .env

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
for var in S3_BUCKET S3_ENDPOINT S3_ACCESS_KEY S3_SECRET_KEY MOUNT_PATH GITEA_DOMAIN GITEA_HTTP_PORT GITEA_SSH_PORT SERVICE_NAME DATA_VOLUME REPOS_PATH GITEA_ADMIN_USERNAME GITEA_ADMIN_PASSWORD GITEA_ADMIN_EMAIL; do
  eval "value=\$$var"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º eval –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  if [ -z "$value" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ${var} –Ω–µ –∑–∞–¥–∞–Ω–∞ –≤ .env."
    exit 1
  fi
done

echo "üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
echo "  S3_BUCKET       = ${S3_BUCKET}"
echo "  S3_ENDPOINT     = ${S3_ENDPOINT}"
echo "  MOUNT_PATH      = ${MOUNT_PATH}"
echo "  GITEA_DOMAIN    = ${GITEA_DOMAIN}"
echo "  GITEA_HTTP_PORT = ${GITEA_HTTP_PORT}"
echo "  GITEA_SSH_PORT  = ${GITEA_SSH_PORT}"
echo "  SERVICE_NAME    = ${SERVICE_NAME}"
echo "  DATA_VOLUME     = ${DATA_VOLUME}"
echo "  REPOS_PATH      = ${REPOS_PATH}"
echo "  GITEA_ADMIN_USERNAME = ${GITEA_ADMIN_USERNAME}"
echo "  GITEA_ADMIN_EMAIL   = ${GITEA_ADMIN_EMAIL}"
echo

# –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker
echo "> üì¶ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker –¥–ª—è ${DISTRO}..."
if [ -f /etc/apt/sources.list.d/docker.list ]; then
  echo "> üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker..."
  rm -f /etc/apt/sources.list.d/docker.list
fi
apt-get update -y
apt-get install -y ca-certificates curl gnupg
install -m 0755 -d /etc/apt/keyrings
if [ "$DISTRO" = "debian" ]; then
  curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  chmod a+r /etc/apt/keyrings/docker.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian ${CODENAME} stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
elif [ "$DISTRO" = "ubuntu" ]; then
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  chmod a+r /etc/apt/keyrings/docker.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu ${CODENAME} stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
fi
apt-get update -y

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
echo "> üõ†Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã..."
MISSING_TOOLS=""
command -v docker >/dev/null 2>&1 || MISSING_TOOLS="${MISSING_TOOLS} docker.io"
command -v docker-compose >/dev/null 2>&1 || MISSING_TOOLS="${MISSING_TOOLS} docker-compose"
command -v s3fs >/dev/null 2>&1 || MISSING_TOOLS="${MISSING_TOOLS} s3fs"

if [ -n "$MISSING_TOOLS" ]; then
  echo "‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:${MISSING_TOOLS}"
  echo "> üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Ö..."
  apt-get install -y apparmor-utils $MISSING_TOOLS
else
  echo "> ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (docker, docker-compose, s3fs) —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
fi

# 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ /etc/passwd-s3fs
echo "> üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º /etc/passwd-s3fs..."
echo "${S3_ACCESS_KEY}:${S3_SECRET_KEY}" > /etc/passwd-s3fs
chmod 600 /etc/passwd-s3fs

# 5. –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ S3
echo "> ‚èè –û—Ç–º–æ–Ω—Ç–∏—Ä—É–µ–º ${MOUNT_PATH} (–µ—Å–ª–∏ —É–∂–µ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ)..."
umount "${MOUNT_PATH}" 2>/dev/null || true

echo "> üìÅ –°–æ–∑–¥–∞—ë–º –∫–∞—Ç–∞–ª–æ–≥ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ${MOUNT_PATH}..."
mkdir -p "${MOUNT_PATH}"

echo "> üîó –ú–æ–Ω—Ç–∏—Ä—É–µ–º S3-–±–∞–∫–µ—Ç ${S3_BUCKET} –≤ ${MOUNT_PATH}..."
s3fs "${S3_BUCKET}" "${MOUNT_PATH}" \
  -o passwd_file=/etc/passwd-s3fs \
  -o url="${S3_ENDPOINT}" \
  -o use_path_request_style \
  -o allow_other \
  -o nonempty \
  -o uid=1000 \
  -o gid=1000 \
  -o umask=0002

if mount | grep -q "on ${MOUNT_PATH} type fuse.s3fs"; then
  echo "> ‚úÖ S3 —É—Å–ø–µ—à–Ω–æ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ ${MOUNT_PATH}."
else
  echo "‚ùå –û—à–∏–±–∫–∞: S3 –Ω–µ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥ –≤—ã—à–µ."
  exit 1
fi

# 6. –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—â–µ–π volume
HOST_REPOS_DIR="${DATA_VOLUME}/$(basename ${REPOS_PATH})"
if [ -d "${HOST_REPOS_DIR}" ]; then
  echo "> ‚ö†Ô∏è –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø–µ—Ä–µ–∫—Ä—ã—Ç—å volume: ${HOST_REPOS_DIR}"
  rm -rf "${HOST_REPOS_DIR}"
fi

# 7. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
if docker ps -a --format '{{.Names}}' | grep -q "^${SERVICE_NAME}$"; then
  echo "> üßπ –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ${SERVICE_NAME}..."
  if [ -f docker-compose.yml ]; then
    docker compose down || docker rm -f "${SERVICE_NAME}"
  else
    docker rm -f "${SERVICE_NAME}"
  fi
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose.yml
if [ ! -f docker-compose.yml ]; then
  echo "‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."
  exit 1
fi

# 9. –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π docker-compose.yml
echo "> üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Gitea..."
docker compose up -d

echo
echo "=== ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ==="
echo "üåê –û—Ç–∫—Ä–æ–π: http://${GITEA_DOMAIN}:${GITEA_HTTP_PORT}"
echo "üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ ${REPOS_PATH}, —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –Ω–∞ ${MOUNT_PATH} (S3)"
echo "üë§ –ê–¥–º–∏–Ω: ${GITEA_ADMIN_USERNAME} (${GITEA_ADMIN_EMAIL})"
if [ "${GITEA_DISABLE_REGISTRATION}" = "true" ]; then
  echo "üîí –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞. –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å."
else
  echo "üîì –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞."
fi
echo
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Gitea –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞: ls -la ${MOUNT_PATH}"